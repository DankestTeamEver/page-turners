{"version":3,"sources":["assets/bookNavIcon.jpg","components/Navigation.js","components/Home.js","Firebase/index.js","components/ReadMore.js","components/BookItem.js","components/Search.js","components/Bookshelf.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","useState","open","setOpen","navToggle","wasOpened","className","onClick","href","src","bookStackIcon","alt","to","Home","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReadMore","props","state","charLimit","initialState","this","children","readMoreText","readLessText","length","substr","style","color","cursor","background","margin","role","showLongText","bind","showShortText","setState","getReadMoreContent","React","Component","defaultProps","BookItem","solidBookmarkIcon","icon","solidBookmark","size","outlinedBookmarkIcon","outlineBookmark","title","thumbnail","isAdded","authors","genre","rating","description","readMoreClassName","readLessClassName","Search","searchIcon","faSearch","findBooks","searchItem","axios","url","method","responseType","params","key","q","maxResults","then","response","books","data","items","catch","error","alert","handleChange","event","userInput","target","value","handleSearchClick","searchTerm","addFirstBook","bookToAdd","index","database","ref","push","map","book","ind","addedBook","findMatches","objectToPush","dbRef","once","snapshot","alertImage","val","retrievedArray","Object","values","valuesArray","idArray","element","identity","includes","imageLinks","Swal","fire","imageUrl","imageWidth","imageHeight","text","confirmButtonText","handleClickAdd","volumeInfo","categories","averageRating","objectPush","author","join","isRead","id","item","undefined","handleKeyPress","e","type","placeholder","onChange","onKeyPress","name","Bookshelf","bookReader","faBookReader","toggleRead","child","update","deleteBook","remove","readingList","on","uniqueId","numReadBooks","filter","App","github","faGithub","during","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.8729e680.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bookNavIcon.7f33033a.jpg\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport bookStackIcon from \"../assets/bookNavIcon.jpg\";\n\nfunction Navigation() {\n\tconst [ open, setOpen ] = useState(false);\n\n\tfunction navToggle() {\n\t\tsetOpen(wasOpened => !wasOpened)\n\t};\n\t\n\treturn (\n\t\t<div className=\"bookDropdownLink\">\n\t\t\t<div className=\"bookIconImg\" onClick={navToggle}>\n\t\t\t\t<a href=\"#\" className=\"iconButton\">\n\t\t\t\t\t<img src={bookStackIcon} alt=\"Book Icon made into a stack | https://icons8.com/\" />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t{open && (\n\t\t\t<ul className=\"dropdown\">\n\t\t\t\t<li>\n\t\t\t\t<Link to=\"/search\" className=\"menuItem\" onClick={navToggle}>\n\t\t\t\t\tSearch Books\n\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t<Link to=\"/bookshelf\" className=\"menuItem\" onClick={navToggle}>\n\t\t\t\t\tMy Bookshelf\n\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Navigation;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n      <div className=\"intro\">\n        <h2>Welcome</h2>\n        <p>Hello! Find the books you want to read using Page Turners and keep your list as a reference.</p>\n      </div>\n  );\n};\n\nexport default Home;","import firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n// Initialize Firebase\nconst config = {\n    apiKey: \"AIzaSyB-DIOv_lUD2FzybntDXIZ4dfkNPbAQx4E\",\n    authDomain: \"page-turners-77a93.firebaseapp.com\",\n    databaseURL: \"https://page-turners-77a93.firebaseio.com\",\n    projectId: \"page-turners-77a93\",\n    storageBucket: \"page-turners-77a93.appspot.com\",\n    messagingSenderId: \"307533137550\",\n    appId: \"1:307533137550:web:ea7f05d270d236f4966bdf\"\n  };\nfirebase.initializeApp(config);\n\nexport default firebase;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// * * * * IN ORDER TO USE THIS IMPORT WE HAD TO COPY IT FROM THE REPO TO ALTER THE STYLING https://github.com/Thamodaran/react-read-more-less\n\nclass ReadMore extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            charLimit: props.charLimit\n        };\n        this.initialState = this.state;\n    }\n\n    getReadMoreContent() {\n        const { charLimit } = this.state;\n        const { children, readMoreText, readLessText } = this.props;\n        if (children.length > charLimit) {\n            return (<span className=\"short-text\">\n                {children.substr(0, charLimit)}...\n                <span\n                    className=\"readMoreText\"\n                    style={{ color: \"#FFF\", cursor: \"pointer\", \"text-transform\": \"uppercase\", background: \"#637192\", margin: \"5px\" }}\n                    role=\"presentation\"\n                    onClick={this.showLongText.bind(this)}\n                >\n                    {readMoreText}\n                </span>\n            </span>);\n        } else if (children.length < charLimit) {\n            return (<span className=\"short-text\">\n                {children}\n            </span>);\n        }\n        return (<span className=\"short-text\">\n            {children}\n            <span\n                className=\"readMoreText\"\n                style={{ color: \"#FFF\", cursor: \"pointer\", \"text-transform\": \"uppercase\", background: \"#637192\", margin: \"5px\" }}\n                role=\"presentation\"\n                onClick={this.showShortText.bind(this)}\n            >\n                {readLessText}\n            </span>\n        </span>);\n    };\n\n    showLongText() {\n        const { children } = this.props;\n        this.setState({charLimit: children.length});\n        this.getReadMoreContent();\n    }\n\n    showShortText() {\n        this.setState(this.initialState);\n        this.getReadMoreContent();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.getReadMoreContent()}\n            </div>\n        );\n    }\n}\n\nReadMore.propTypes = {\n    charLimit: PropTypes.number,\n    readMoreText: PropTypes.string,\n    readLessText: PropTypes.string,\n    children: PropTypes.string.isRequired\n};\nReadMore.defaultProps = {\n    charLimit: 150,\n    readMoreText: \"Read more\",\n    readLessText: \"Read less\"\n};\nexport default ReadMore;","import React from \"react\";\nimport ReactReadMoreReadLess from \"./ReadMore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBookmark as solidBookmark } from \"@fortawesome/free-solid-svg-icons\";\nimport { faBookmark as outlineBookmark } from \"@fortawesome/free-regular-svg-icons\";\n\nconst BookItem = (props) => {\n\n  let solidBookmarkIcon = <FontAwesomeIcon icon={solidBookmark} size=\"3x\" className=\"bookmark\"/>;\n  let outlinedBookmarkIcon = <FontAwesomeIcon icon={outlineBookmark} size=\"2x\"/>;\n\n  return (\n    <div className=\"book\">\n      <h3 className=\"title\">{props.title}</h3>\n      <div className=\"imageContainer bookImage\">\n        <img src={props.thumbnail} alt={props.title} />\n        </div>\n        <div className=\"writtenInfo info\">\n          {props.isAdded ? (\n            <span className=\"bookmark\">{solidBookmarkIcon}</span>\n          ) : (\n            <span className=\"bookmark\">{outlinedBookmarkIcon}</span>\n          )} \n          <p className=\"author\">{props.authors}</p>\n          <p>Genre: {props.genre ? `${props.genre}` : \"Not available\"}</p>\n          <p>Rating: {props.rating ? `${props.rating}/5` : \"Not available\"}</p>\n        </div>\n        {props.description ? \n            (<div className=\"bookDescription blurb\">\n            <ReactReadMoreReadLess\n                charLimit={200}\n                readMoreText=\" read more ▼\"\n                readLessText=\" read less ▲\"\n                readMoreClassName=\"read-more-less--more\"\n                readLessClassName=\"read-more-less--less\"\n            >\n                {props.description}\n            </ReactReadMoreReadLess> \n             </div>) : null }\n      </div>\n  );\n};\n\nexport default BookItem;\n","import React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport firebase from \"../Firebase/index.js\";\nimport BookItem from \"./BookItem.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport Swal from \"sweetalert2\";\nimport \"../App.scss\";\n\n\nclass Search extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tbooks: [],\n\t\t\tuserInput: \"\",\n\t\t};\n\t}\n\n\tsearchIcon = <FontAwesomeIcon icon={faSearch} size=\"1x\"/>;\n\n\tfindBooks = (searchItem) => {\n\t\taxios({\n\t\t\turl: \"https://www.googleapis.com/books/v1/volumes?\",\n\t\t\tmethod: \"GET\",\n\t\t\tresponseType: \"JSON\",\n\t\t\tparams: {\n\t\t\t\tkey: \"AIzaSyD7Ytli5GUZu5S7FoaFn-sSMzsdWuwv_8E\",\n\t\t\t\tq: searchItem,\n\t\t\t\tmaxResults: 40,\n\t\t\t}\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tlet books = response.data.items;\n\t\t\t\tthis.setState({\n\t\t\t\t\tbooks\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\talert(error);\n\t\t\t});\n\t};\n\n\thandleChange = (event) => {\n\t\tthis.setState({\n\t\t\tuserInput: event.target.value\n\t\t});\n\t};\n\n\thandleSearchClick = () => {\n\t\tif (!this.state.userInput) return;\n\t\tlet searchTerm = this.state.userInput;\n\t\tthis.findBooks(searchTerm);\n\t\tthis.setState({\n\t\t\tuserInput: \"\"\n\t\t});\n\t};\n\n\t addFirstBook = (bookToAdd, index) => {\n        const dbRef = firebase.database().ref(\"readingList\");\n        dbRef.push(bookToAdd);\n            this.setState({\n                books: this.state.books.map((book, ind) => {\n                    if (ind !== index) return book;\n                    const addedBook = {...book};\n                    addedBook.isAdded = true;\n                    return addedBook;\n                }),\n            });\n    };\n\n\tfindMatches = (objectToPush, index) => {\n        const dbRef = firebase.database().ref(\"readingList\");\n        dbRef.once(\"value\", (snapshot) => {\n            const data = snapshot.val();\n            const retrievedArray = Object.values(data);\n            const valuesArray = Object.values(retrievedArray);\n            let idArray = [];\n            valuesArray.map(element => {\n                idArray.push(element.identity);\n\t\t\t\treturn idArray;\n            });\n            let areThereMatches = idArray.includes(objectToPush.identity);\n            if (areThereMatches) {\n                let alertImage;\n                objectToPush.imageLinks ? alertImage = objectToPush.imageLinks.thumbnail : alertImage = \"https://d827xgdhgqbnd.cloudfront.net/wp-content/uploads/2016/04/09121712/book-cover-placeholder.png\";\n                Swal.fire({title: \"Oops...\", imageUrl: alertImage, imageWidth: 400, imageHeight: 400, text: `It looks like you have already added  ${objectToPush.title} to your bookshelf`, confirmButtonText: \"Cool\"});\n            } else {\n                dbRef.push(objectToPush);\n                    this.setState({\n                        books: this.state.books.map((book, ind) => {\n                            if (ind !== index) return book;\n                            const addedBook = {...book};\n                            addedBook.isAdded = true;\n                            return addedBook;\n                        }),\n                    });\n            };\n        });\n    };\n\n\t handleClickAdd = (index) => {\n        const dbRef = firebase.database().ref(\"readingList\");\n        const { title, authors, description, categories, averageRating, imageLinks } = this.state.books[index].volumeInfo;\n        let author;\n        if (authors && authors.length > 1){\n            author = authors.join(\", \");\n         } else {\n             author = authors;\n        };\n        const objectPush = {\n          title: title,\n          author: author,\n          description,\n          genre: categories,\n          rating: averageRating,\n          imageLinks,\n          isRead: false,\n          identity: this.state.books[index].id\n        };\n\n        for (let item in objectPush) {\n            if (objectPush[item] === undefined){\n                delete objectPush[item];\n            }\n        };\n\n        dbRef.once(\"value\", (snapshot) => {\n            const data = snapshot.val();\n            if (!data){\n                this.addFirstBook(objectPush, index);\n            } else {\n                this.findMatches(objectPush, index);\n            };\n        });\n    };\n\n\n\thandleKeyPress = (e) => {\n\t\tif (e.key === \"Enter\") {\n\t\t\tif (!this.state.userInput) return;\n\t\t\tlet searchTerm = this.state.userInput;\n\t\t\tthis.findBooks(searchTerm);\n\t\t\tthis.setState({\n\t\t\t\tuserInput: \"\"\n\t\t\t});\n\t\t}\n  };\n  \n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"inputSearch\">\n\t\t\t\t\t<label className=\"visuallyHidden\">Search a book by title or author</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Title / Author\"\n\t\t\t\t\t\tvalue={this.state.userInput}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t\t\tname=\"userInput\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"searchButton\" onClick={this.handleSearchClick}>{this.searchIcon}</button>\n\t\t\t\t</div>\n\t\t\t\t{!this.state.books ? (\n\t\t\t\t\t<h2>There were no matches, please try again</h2>\n\t\t\t\t) : (\n\t\t\t\t\t<ul className=\"bookSearch\">\n\t\t\t\t\t\t{this.state.books.map((book, index) => {\n\t\t\t\t\t\t\tconst  { title, authors, description, categories, averageRating, imageLinks } = book.volumeInfo;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className=\"listResult\" key={index}>\n\t\t\t\t\t\t\t\t\t<BookItem\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\t\tauthors={authors && authors.length > 1 ? authors.join(\", \") : authors}\n\t\t\t\t\t\t\t\t\t\tdescription={description}\n\t\t\t\t\t\t\t\t\t\tgenre={categories}\n\t\t\t\t\t\t\t\t\t\tisAdded={book.isAdded}\n\t\t\t\t\t\t\t\t\t\trating={averageRating}\n\t\t\t\t\t\t\t\t\t\tthumbnail={imageLinks ? imageLinks.thumbnail : \"https://d827xgdhgqbnd.cloudfront.net/wp-content/uploads/2016/04/09121712/book-cover-placeholder.png\"}\n\t\t\t\t\t\t\t\t\t\thandleClickAdd={this.handleClickAdd}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button className={book.isAdded ? \"toggledButton\" : null} onClick={() => this.handleClickAdd(index)}>\n\t\t\t\t\t\t\t\t\t\t{!book.isAdded ? \"Add Book\": \"Added\"}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t)}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\nexport default Search;","import React, { Component } from \"react\";\nimport firebase from \"../Firebase/index.js\";\nimport ReactReadMoreReadLess from \"./ReadMore.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBookReader } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Bookshelf extends Component {\n  constructor() {\n    super();\n    this.state = {\n      readingList: [],\n    };\n  }\n\n  bookReader = <FontAwesomeIcon  icon={faBookReader} size=\"1x\" />\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref(\"readingList\");\n    dbRef.on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      const readingList = [];\n      for (let key in data) {\n        readingList.push({\n          uniqueId: key,\n          ...data[key],\n        });\n      }\n      this.setState({\n        readingList,\n      });\n    });\n  }\n\n  toggleRead = (index) => {\n    const dbRef = firebase.database().ref(\"readingList\");\n    dbRef.once(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      if (data[index].isRead) {\n        dbRef.child(index).update({isRead: false});\n      } else {\n        dbRef.child(index).update({isRead: true});\n      }\n    });\n  };\n\n  deleteBook = (index) => {\n    const dbRef = firebase.database().ref(\"readingList\");\n    dbRef.child(index).remove();\n  };\n\n  render() {\n    const numReadBooks = this.state.readingList.filter((item) => item.isRead).length;\n    return (\n      <div>\n        <h2>{this.bookReader} Bookshelf </h2>\n        <p>\n          You have read {numReadBooks} out of {this.state.readingList.length}{\" \"}\n        </p>\n        <ul>\n          {this.state.readingList.map((book, index) => {\n            return (\n              <li key={index} className=\"book bookListing\">\n                <h3 className=\"title\">{book.title ? `${book.title}` : \"Not available\"}</h3>\n                  <div className=\"imageContainer bookImage\">\n                    <img\n                      src={\n                        book.imageLinks\n                          ? book.imageLinks.thumbnail\n                          : \"https://d827xgdhgqbnd.cloudfront.net/wp-content/uploads/2016/04/09121712/book-cover-placeholder.png\"\n                      }\n                      alt={book.title}\n                    />\n                  </div>\n                  <div className=\"writtenInfo info\">\n                    <p>\n                      Author: {book.author ? `${book.author}` : \"Not available\"}\n                    </p>\n                    <p>\n                      Genre: {book.genre ? `${book.genre}` : \"Not available\"}\n                    </p>\n                    <p>\n                      Rating: {book.rating ? `${book.rating}/5` : \"Not available\"}\n                    </p>\n                  </div>\n                  {book.description ? (\n                    <div className=\"bookDescription blurb\">\n                      <ReactReadMoreReadLess\n                        className=\"moreOrLess\"\n                        charLimit={200}\n                        readMoreText=\" read more ▼\"\n                        readLessText=\" read less ▲\"\n                        readMoreClassName=\"read-more-less--more\"\n                        readLessClassName=\"read-more-less--less\"\n                      >\n                        {book.description}\n                      </ReactReadMoreReadLess>\n                    </div>\n                  ) : null}\n                  \n                  <button className={`readButton ${book.isRead ? \"toggledButton\" : null}`} onClick={() => this.toggleRead(book.uniqueId)}>{book.isRead ? \"Mark as Unread\": \"Mark as Read\"}</button>\n\n                  <button\n                    className=\"delButton\"\n                    onClick={() => this.deleteBook(book.uniqueId)}\n                  >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Bookshelf;\n","import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport \"./App.scss\";\nimport Ripples from \"react-ripples\";\n\n// * * * * ROUTER ELEMENTS\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Search from \"./components/Search\";\nimport Bookshelf from \"./components/Bookshelf\";\n// * * * * ROUTER ELEMENTS END\n\nclass App extends Component {\n\n\tgithub = <FontAwesomeIcon icon={faGithub} size=\"1x\" />;\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<Ripples className=\"h1\" color=\"#f1f8f8\" during={1200}>\n\t\t\t\t\t\t\t<Link to=\"/page-turners\" className=\"pageTitle\">\n\t\t\t\t\t\t\t\t<h1>Page Turners</h1>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Ripples>\n\n\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t</header>\n\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t\t<Route exact path=\"/page-turners\" component={Home} />\n\t\t\t\t\t\t\t<Route exact path=\"/search\" component={Search} />\n\t\t\t\t\t\t\t<Route exact path=\"/bookshelf\" component={Bookshelf} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</main>\n\n\t\t\t\t\t<footer>\n\t\t\t\t\t\t<div className=\"groupMembers\">\n\t\t\t\t\t\t\t<h3>Group Project By:</h3>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Ripples color=\"#f1f8f8\" during={1200}>\n\t\t\t\t\t\t\t\t\t\t<a href=\"https://github.com/daibhidhdwaum\">{this.github} daibhidhdwaum</a>\n\t\t\t\t\t\t\t\t\t</Ripples>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Ripples color=\"#f1f8f8\" during={1200}>\n\t\t\t\t\t\t\t\t\t\t<a href=\"https://github.com/vigyan-k\">{this.github} vigyan-k</a>\n\t\t\t\t\t\t\t\t\t</Ripples>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Ripples color=\"#f1f8f8\" during={1200}>\n\t\t\t\t\t\t\t\t\t\t<a href=\"https://github.com/OksanaSam\">{this.github} OksanaSam</a>\n\t\t\t\t\t\t\t\t\t</Ripples>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<Ripples color=\"#f1f8f8\" during={1200}>\n\t\t\t\t\t\t\t\t\t\t<a href=\"https://github.com/amay-zingg\">{this.github} amay-zingg</a>\n\t\t\t\t\t\t\t\t\t</Ripples>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</footer>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}