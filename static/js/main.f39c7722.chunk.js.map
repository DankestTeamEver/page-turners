{"version":3,"sources":["assets/bookNavIcon.jpg","components/Navigation.js","components/Footer.js","components/Home.js","Firebase/index.js","components/ReadMore.js","components/BookItem.js","components/Search.js","components/Bookshelf.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","useState","open","setOpen","navToggle","wasOpened","className","onClick","href","src","bookStackIcon","alt","to","Footer","state","members","link","person","github","icon","faGithub","size","this","map","item","index","key","color","during","Component","Home","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReadMore","props","charLimit","initialState","children","readMoreText","readLessText","length","substr","style","cursor","background","margin","role","showLongText","bind","showShortText","setState","getReadMoreContent","React","defaultProps","BookItem","solidBookmarkIcon","solidBookmark","outlinedBookmarkIcon","outlineBookmark","title","thumbnail","isAdded","authors","genre","rating","description","readMoreClassName","readLessClassName","Search","searchIcon","faSearch","findBooks","searchItem","axios","url","method","responseType","params","q","maxResults","then","response","books","data","items","catch","error","alert","hasError","handleChange","event","userInput","target","value","handleSearchClick","searchTerm","addFirstBook","bookToAdd","database","ref","push","book","ind","addedBook","findMatches","objectToPush","dbRef","once","snapshot","alertImage","val","retrievedArray","Object","values","valuesArray","idArray","element","identity","includes","imageLinks","Swal","fire","imageUrl","imageWidth","imageHeight","text","confirmButtonText","handleClickAdd","volumeInfo","categories","averageRating","objectPush","author","join","isRead","id","undefined","handleKeyPress","e","type","placeholder","onChange","onKeyPress","name","Bookshelf","bookReader","faBookReader","toggleRead","child","update","deleteBook","remove","readingList","on","uniqueId","numReadBooks","filter","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.f39c7722.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bookNavIcon.7f33033a.jpg\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport bookStackIcon from \"../assets/bookNavIcon.jpg\";\n\nfunction Navigation() {\n\tconst [ open, setOpen ] = useState(false);\n\n\tfunction navToggle() {\n\t\tsetOpen(wasOpened => !wasOpened)\n\t};\n\t\n\treturn (\n      <div className=\"bookDropdownLink\">\n        <div className=\"bookIconImg\" onClick={navToggle}>\n          <a href=\"#\" className=\"iconButton\">\n            <img\n              src={bookStackIcon}\n              alt=\"Book Icon made into a stack | https://icons8.com/\"\n            />\n          </a>\n        </div>\n        {open && (\n          <ul className=\"dropdown\">\n            <li>\n              <Link to=\"/search\" className=\"menuItem\" onClick={navToggle}>\n                Search Books\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/bookshelf\" className=\"menuItem\" onClick={navToggle}>\n                My Bookshelf\n              </Link>\n            </li>\n          </ul>\n        )}\n      </div>\n  );\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport Ripples from 'react-ripples';\n\nclass Footer extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmembers: [\n\t\t\t\t{\n\t\t\t\t\tlink: 'https://github.com/daibhidhdwaum',\n\t\t\t\t\tperson: 'daibhidhdwaum'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlink: 'https://github.com/vigyan-k',\n\t\t\t\t\tperson: 'vigyan-k'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlink: 'https://github.com/OksanaSam',\n\t\t\t\t\tperson: 'OksanaSam'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlink: 'https://github.com/amay-zingg',\n\t\t\t\t\tperson: 'amay-zingg'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\trender() {\n\t\tlet github = <FontAwesomeIcon icon={faGithub} size=\"1x\" />;\n\n\t\treturn (\n\t\t\t<footer>\n\t\t\t\t<div className=\"groupMembers wrapper\">\n\t\t\t\t\t<h3>Group Project By:</h3>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{this.state.members.map((item,index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t\t\t<Ripples color=\"#f1f8f8\" during={1200}>\n\t\t\t\t\t\t\t\t\t\t<a href={item.link}>\n\t\t\t\t\t\t\t\t\t\t\t{github} {item.person}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</Ripples>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n      <div className=\"intro\">\n        <h2>Welcome</h2>\n        <p>Hello! Find the books you want to read using Page Turners and keep your list as a reference.</p>\n      </div>\n  );\n};\n\nexport default Home;","import firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n// Initialize Firebase\nconst config = {\n    apiKey: \"AIzaSyB-DIOv_lUD2FzybntDXIZ4dfkNPbAQx4E\",\n    authDomain: \"page-turners-77a93.firebaseapp.com\",\n    databaseURL: \"https://page-turners-77a93.firebaseio.com\",\n    projectId: \"page-turners-77a93\",\n    storageBucket: \"page-turners-77a93.appspot.com\",\n    messagingSenderId: \"307533137550\",\n    appId: \"1:307533137550:web:ea7f05d270d236f4966bdf\"\n  };\nfirebase.initializeApp(config);\n\nexport default firebase;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// * * * * IN ORDER TO USE THIS IMPORT WE HAD TO COPY IT FROM THE REPO TO ALTER THE STYLING https://github.com/Thamodaran/react-read-more-less\n\nclass ReadMore extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            charLimit: props.charLimit\n        };\n        this.initialState = this.state;\n    }\n\n    getReadMoreContent() {\n        const { charLimit } = this.state;\n        const { children, readMoreText, readLessText } = this.props;\n        if (children.length > charLimit) {\n            return (<span className=\"short-text\">\n                {children.substr(0, charLimit)}...\n                <span\n                    className=\"readMoreText\"\n                    style={{ color: \"#FFF\", cursor: \"pointer\", \"textTransform\": \"uppercase\", background: \"#637192\", margin: \"5px\" }}\n                    role=\"presentation\"\n                    onClick={this.showLongText.bind(this)}\n                >\n                    {readMoreText}\n                </span>\n            </span>);\n        } else if (children.length < charLimit) {\n            return (<span className=\"short-text\">\n                {children}\n            </span>);\n        }\n        return (<span className=\"short-text\">\n            {children}\n            <span\n                className=\"readMoreText\"\n                style={{ color: \"#FFF\", cursor: \"pointer\", \"textTransform\": \"uppercase\", background: \"#637192\", margin: \"5px\" }}\n                role=\"presentation\"\n                onClick={this.showShortText.bind(this)}\n            >\n                {readLessText}\n            </span>\n        </span>);\n    };\n\n    showLongText() {\n        const { children } = this.props;\n        this.setState({charLimit: children.length});\n        this.getReadMoreContent();\n    }\n\n    showShortText() {\n        this.setState(this.initialState);\n        this.getReadMoreContent();\n    }\n\n    render() {\n        return (\n            <div>\n                {this.getReadMoreContent()}\n            </div>\n        );\n    }\n}\n\nReadMore.propTypes = {\n    charLimit: PropTypes.number,\n    readMoreText: PropTypes.string,\n    readLessText: PropTypes.string,\n    children: PropTypes.string.isRequired\n};\nReadMore.defaultProps = {\n    charLimit: 150,\n    readMoreText: \"Read more\",\n    readLessText: \"Read less\"\n};\nexport default ReadMore;","import React from \"react\";\nimport ReactReadMoreReadLess from \"./ReadMore\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBookmark as solidBookmark } from \"@fortawesome/free-solid-svg-icons\";\nimport { faBookmark as outlineBookmark } from \"@fortawesome/free-regular-svg-icons\";\n\nconst BookItem = (props) => {\n  let solidBookmarkIcon = (\n    <FontAwesomeIcon icon={solidBookmark} size=\"3x\" className=\"bookmark\" />\n  );\n  let outlinedBookmarkIcon = (\n    <FontAwesomeIcon icon={outlineBookmark} size=\"2x\" />\n  );\n\n  return (\n    <div className=\"book\">\n      <h3 className=\"title\">{props.title}</h3>\n        <div className=\"imageContainer bookImage\">\n          <img src={props.thumbnail} alt={props.title} />\n        </div>\n        <div className=\"writtenInfo info\">\n          {props.isAdded ? (\n            <span className=\"bookmark\">{solidBookmarkIcon}</span>\n          ) : (\n            <span className=\"bookmark\">{outlinedBookmarkIcon}</span>\n          )}\n          <p className=\"author\">{props.authors}</p>\n\n          <p>Genre: {props.genre ? `${props.genre}` : \"Not available\"}</p>\n          <p>Rating: {props.rating ? `${props.rating}/5` : \"Not available\"}</p>\n        </div>\n        {props.description ? \n            (<div className=\"bookDescription blurb\">\n            <ReactReadMoreReadLess\n                charLimit={200}\n                readMoreText=\" read more ▼\"\n                readLessText=\" read less ▲\"\n                readMoreClassName=\"read-more-less--more\"\n                readLessClassName=\"read-more-less--less\"\n            >\n                {props.description}\n            </ReactReadMoreReadLess> \n             </div>) : null }\n      </div>\n  );\n};\n\nexport default BookItem;\n","import React, { Component, Fragment } from \"react\";\nimport axios from \"axios\";\nimport firebase from \"../Firebase/index.js\";\nimport BookItem from \"./BookItem.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport Swal from \"sweetalert2\";\nimport \"../App.scss\";\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      books: [],\n      userInput: \"\",\n    };\n  }\n\n  searchIcon = (<FontAwesomeIcon icon={faSearch} size=\"1x\" />);\n\n  findBooks = (searchItem) => {\n    axios({\n      url: \"https://www.googleapis.com/books/v1/volumes?\",\n      method: \"GET\",\n      responseType: \"JSON\",\n      params: {\n        key: \"AIzaSyD7Ytli5GUZu5S7FoaFn-sSMzsdWuwv_8E\",\n        q: searchItem,\n        maxResults: 40,\n      },\n    })\n      .then((response) => {\n        let books = response.data.items;\n        this.setState({\n          books,\n        });\n      })\n      .catch((error) => {\n        alert(error);\n        this.setState({\n          hasError: false,\n        });\n      });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      userInput: event.target.value,\n    });\n  };\n\n  handleSearchClick = () => {\n    if (!this.state.userInput) return;\n    let searchTerm = this.state.userInput;\n    this.findBooks(searchTerm);\n    this.setState({\n      userInput: \"\",\n    });\n  };\n\n  addFirstBook = (bookToAdd, index) => {\n    const dbRef = firebase.database().ref(\"readingList\");\n    dbRef.push(bookToAdd);\n    this.setState({\n      books: this.state.books.map((book, ind) => {\n        if (ind !== index) return book;\n        const addedBook = { ...book };\n        addedBook.isAdded = true;\n        return addedBook;\n      }),\n    });\n  };\n\n  findMatches = (objectToPush, index) => {\n    const dbRef = firebase.database().ref(\"readingList\");\n    dbRef.once(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      const retrievedArray = Object.values(data);\n      const valuesArray = Object.values(retrievedArray);\n      let idArray = [];\n      valuesArray.map((element) => {\n        idArray.push(element.identity);\n        return idArray;\n      });\n      let areThereMatches = idArray.includes(objectToPush.identity);\n      if (areThereMatches) {\n        let alertImage;\n        objectToPush.imageLinks\n          ? (alertImage = objectToPush.imageLinks.thumbnail)\n          : (alertImage =\n              \"https://d827xgdhgqbnd.cloudfront.net/wp-content/uploads/2016/04/09121712/book-cover-placeholder.png\");\n        Swal.fire({\n          title: \"Oops...\",\n          imageUrl: alertImage,\n          imageWidth: 400,\n          imageHeight: 400,\n          text: `It looks like you have already added  ${objectToPush.title} to your bookshelf`,\n          confirmButtonText: \"Cool\",\n        });\n      } else {\n        dbRef.push(objectToPush);\n        this.setState({\n          books: this.state.books.map((book, ind) => {\n            if (ind !== index) return book;\n            const addedBook = { ...book };\n            addedBook.isAdded = true;\n            return addedBook;\n          }),\n        });\n      }\n    });\n  };\n\n  handleClickAdd = (index) => {\n    const dbRef = firebase.database().ref(\"readingList\");\n\n    const {\n      title,\n      authors,\n      description,\n      categories,\n      averageRating,\n      imageLinks,\n    } = this.state.books[index].volumeInfo;\n\n    let author;\n\n    if (authors && authors.length > 1) {\n      author = authors.join(\", \");\n    } else {\n      author = authors;\n    }\n\n    const objectPush = {\n      title: title,\n      author: author,\n      description,\n      genre: categories,\n      rating: averageRating,\n      imageLinks,\n      isRead: false,\n      identity: this.state.books[index].id,\n    };\n\n    for (let item in objectPush) {\n      if (objectPush[item] === undefined) {\n        delete objectPush[item];\n      }\n    }\n\n    dbRef.once(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      if (!data) {\n        this.addFirstBook(objectPush, index);\n      } else {\n        this.findMatches(objectPush, index);\n      }\n    });\n  };\n\n  handleKeyPress = (e) => {\n        if (e.key === \"Enter\") {\n            if (!this.state.userInput) return;\n            let searchTerm = this.state.userInput;\n            this.findBooks(searchTerm);\n            this.setState({\n                userInput: \"\"\n            });\n        }\n  };\n\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"inputSearch\">\n          <h2>Find your next read!</h2>\n\t\t\t\t\t<label className=\"visuallyHidden\">Search a book by title or author</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Title / Author\"\n\t\t\t\t\t\tvalue={this.state.userInput}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tonKeyPress={this.handleKeyPress}\n\t\t\t\t\t\tname=\"userInput\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"searchButton\" onClick={this.handleSearchClick}>{this.searchIcon}</button>\n\t\t\t\t</div>\n\t\t\t\t{!this.state.books ? (\n\t\t\t\t\t<h2>There were no matches, please try again</h2>\n\t\t\t\t) : (\n\t\t\t\t\t<ul className=\"bookSearch\">\n\t\t\t\t\t\t{this.state.books.map((book, index) => {\n\t\t\t\t\t\t\tconst  { title, authors, description, categories, averageRating, imageLinks } = book.volumeInfo;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li className=\"listResult\" key={index}>\n\t\t\t\t\t\t\t\t\t<BookItem\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\t\tauthors={authors && authors.length > 1 ? authors.join(\", \") : authors}\n\t\t\t\t\t\t\t\t\t\tdescription={description}\n\t\t\t\t\t\t\t\t\t\tgenre={categories}\n\t\t\t\t\t\t\t\t\t\tisAdded={book.isAdded}\n\t\t\t\t\t\t\t\t\t\trating={averageRating}\n\t\t\t\t\t\t\t\t\t\tthumbnail={imageLinks ? imageLinks.thumbnail : \"https://d827xgdhgqbnd.cloudfront.net/wp-content/uploads/2016/04/09121712/book-cover-placeholder.png\"}\n\t\t\t\t\t\t\t\t\t\thandleClickAdd={this.handleClickAdd}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button className={book.isAdded ? \"toggledButton\" : null} onClick={() => this.handleClickAdd(index)}>\n\t\t\t\t\t\t\t\t\t\t{!book.isAdded ? \"Add Book\": \"Added\"}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t)}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport firebase from \"../Firebase/index.js\";\nimport ReactReadMoreReadLess from \"./ReadMore.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBookReader } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Bookshelf extends Component {\n  constructor() {\n    super();\n    this.state = {\n      readingList: [],\n    };\n  }\n\n  bookReader = <FontAwesomeIcon  icon={faBookReader} size=\"1x\" />\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref(\"readingList\");\n    dbRef.on(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      const readingList = [];\n      for (let key in data) {\n        readingList.push({\n          uniqueId: key,\n          ...data[key],\n        });\n      }\n      this.setState({\n        readingList,\n      });\n    });\n  }\n\n  toggleRead = (index) => {\n    const dbRef = firebase.database().ref(\"readingList\");\n    dbRef.once(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      if (data[index].isRead) {\n        dbRef.child(index).update({isRead: false});\n      } else {\n        dbRef.child(index).update({isRead: true});\n      }\n    });\n  };\n\n  deleteBook = (index) => {\n    const dbRef = firebase.database().ref(\"readingList\");\n    dbRef.child(index).remove();\n  };\n\n  render() {\n    const numReadBooks = this.state.readingList.filter((item) => item.isRead).length;\n    return (\n      <div>\n        <h2>{this.bookReader} Bookshelf </h2>\n        <p>\n          You have read {numReadBooks} out of {this.state.readingList.length}{\" \"}\n        </p>\n        <ul>\n          {this.state.readingList.map((book, index) => {\n            return (\n              <li key={index} className=\"book bookListing\">\n                <h3 className=\"title\">{book.title ? `${book.title}` : \"Not available\"}</h3>\n                  <div className=\"imageContainer bookImage\">\n                    <img\n                      src={\n                        book.imageLinks\n                          ? book.imageLinks.thumbnail\n                          : \"https://d827xgdhgqbnd.cloudfront.net/wp-content/uploads/2016/04/09121712/book-cover-placeholder.png\"\n                      }\n                      alt={book.title}\n                    />\n                  </div>\n                  <div className=\"writtenInfo info\">\n                    <p>\n                      Author: {book.author ? `${book.author}` : \"Not available\"}\n                    </p>\n                    <p>\n                      Genre: {book.genre ? `${book.genre}` : \"Not available\"}\n                    </p>\n                    <p>\n                      Rating: {book.rating ? `${book.rating}/5` : \"Not available\"}\n                    </p>\n                  </div>\n                  {book.description ? (\n                    <div className=\"bookDescription blurb\">\n                      <ReactReadMoreReadLess\n                        className=\"moreOrLess\"\n                        charLimit={200}\n                        readMoreText=\" read more ▼\"\n                        readLessText=\" read less ▲\"\n                        readMoreClassName=\"read-more-less--more\"\n                        readLessClassName=\"read-more-less--less\"\n                      >\n                        {book.description}\n                      </ReactReadMoreReadLess>\n                    </div>\n                  ) : null}\n                  \n                  <button className={`readButton ${book.isRead ? \"toggledButton\" : null}`} onClick={() => this.toggleRead(book.uniqueId)}>{book.isRead ? \"Mark as Unread\": \"Mark as Read\"}</button>\n\n                  <button\n                    className=\"delButton\"\n                    onClick={() => this.deleteBook(book.uniqueId)}\n                  >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Bookshelf;\n","import React, { Component } from \"react\";\nimport Navigation from \"./components/Navigation\";\nimport Footer from \"./components/Footer\";\nimport \"./App.scss\";\nimport Ripples from \"react-ripples\";\n\n// * * * * ROUTER ELEMENTS\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Search from \"./components/Search\";\nimport Bookshelf from \"./components/Bookshelf\";\n// * * * * ROUTER ELEMENTS END\n\nclass App extends Component {\n  \n\trender() {\n\t\treturn (\n      <Router>\n        <div className=\"App\">\n          <header>\n            <div className=\"wrapper\">\n              <div className=\"headerContent\">\n                <Ripples className=\"h1\" color=\"#f1f8f8\" during={1200}>\n                  <Link to=\"/page-turners\" className=\"pageTitle\">\n                    <h1>Page Turners</h1>\n                  </Link>\n                </Ripples>\n\n                <Navigation />\n              </div>\n            </div>\n          </header>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t\t<Route exact path=\"/page-turners\" component={Home} />\n\t\t\t\t\t\t\t<Route exact path=\"/search\" component={Search} />\n\t\t\t\t\t\t\t<Route exact path=\"/bookshelf\" component={Bookshelf} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</main>\n\t\t\t\t\t<Footer />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}